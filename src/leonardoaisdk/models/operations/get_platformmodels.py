"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from leonardoaisdk import utils
from typing import Optional



@dataclasses.dataclass
class GetPlatformModelsRequest:
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetPlatformModels200ApplicationJSONCustomModelsGeneratedImages:
    r"""columns and relationships of \\"generated_images\\" """
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetPlatformModels200ApplicationJSONCustomModels:
    r"""columns and relationships of \\"custom_models\\" """
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    featured: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('featured'), 'exclude': lambda f: f is None }})
    generated_image: Optional[GetPlatformModels200ApplicationJSONCustomModelsGeneratedImages] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('generated_image'), 'exclude': lambda f: f is None }})
    r"""columns and relationships of \\"generated_images\\" """
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    nsfw: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nsfw'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetPlatformModels200ApplicationJSON:
    r"""Responses for GET /api/rest/v1/platformModels"""
    custom_models: Optional[list[GetPlatformModels200ApplicationJSONCustomModels]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_models'), 'exclude': lambda f: f is None }})
    




@dataclasses.dataclass
class GetPlatformModelsResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    get_platform_models_200_application_json_object: Optional[GetPlatformModels200ApplicationJSON] = dataclasses.field(default=None)
    r"""Responses for GET /api/rest/v1/platformModels"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

